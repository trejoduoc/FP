{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOT80+nXtl2Nnnqvc1Hqx5d",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/trejoduoc/FP/blob/main/Gu%C3%ADa%20loops\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Ciclos\n",
        "Breves ejemplos de for y while.\n"
      ],
      "metadata": {
        "id": "Qn3wwNI5O-zc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#For loops\n"
      ],
      "metadata": {
        "id": "DElRjDuXPOz1"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "id": "jGCrcbiIL6cj",
        "outputId": "bc2f8f0d-782a-4951-d9ff-e1bcdf9c9ba8",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "---- ejemplo1 -----\n",
            "0\n",
            "1\n",
            "2\n",
            "3\n"
          ]
        }
      ],
      "source": [
        "print(\"\\n---- ejemplo1 -----\")\n",
        "for k in range(4):\n",
        "    print(k)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\n---- ejemplo2 -----\")\n",
        "for j in range(100):\n",
        "    print(j, end=\", \")"
      ],
      "metadata": {
        "id": "6Mcx4x6vNR5T",
        "outputId": "c774d316-3fba-4b51-cc4b-c47755f6d594",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "---- ejemplo2 -----\n",
            "0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for k in range(2, 10):\n",
        "    print(k)\n",
        ""
      ],
      "metadata": {
        "id": "qi8YXAKaNUg1",
        "outputId": "802a1e6a-e9a9-4801-997b-4765fc1adbc0",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2\n",
            "3\n",
            "4\n",
            "5\n",
            "6\n",
            "7\n",
            "8\n",
            "9\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#While loops"
      ],
      "metadata": {
        "id": "_Cu-KLuYPRrQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "k = 1\n",
        "while k < 10:\n",
        "    print(k, end=\" \")\n",
        "    k = k+1"
      ],
      "metadata": {
        "id": "85FR3nSZNToE",
        "outputId": "48467e62-e3e0-414c-b77c-ad05e7d95d72",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1 2 3 4 5 6 7 8 9 "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\n-----  pares ------\")\n",
        "k = 1\n",
        "while k <= 100:\n",
        "    print(f\"{2*k}\", end=\", \")\n",
        "    k = k+1"
      ],
      "metadata": {
        "id": "MZ9WbfynNdXB",
        "outputId": "8d00bf56-b491-4938-d76e-14f2ca137d53",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "-----  pares ------\n",
            "2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 146, 148, 150, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 196, 198, 200, "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\n-----  impares ------\")\n",
        "k = 1\n",
        "while k <= 50:\n",
        "    print(f\"{2*k}\", end=\", \")\n",
        "    k = k+1"
      ],
      "metadata": {
        "id": "Msq1yHMNNe06",
        "outputId": "1b9a2223-f171-47c6-d573-6b4ffdc62dfa",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "-----  impares ------\n",
            "2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, "
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"\\n-----  impares ------\")\n",
        "k = 1\n",
        "while k <= 50:\n",
        "    print(f\"{2*k}\", end=\", \")\n",
        "    k = k+1"
      ],
      "metadata": {
        "id": "feikkoSWO5dq",
        "outputId": "f79579fc-5985-4bb0-99c9-f3ea49f1415f",
        "colab": {
          "base_uri": "https://localhost:8080/"
        }
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "-----  impares ------\n",
            "2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 84, 86, 88, 90, 92, 94, 96, 98, 100, "
          ]
        }
      ]
    }
  ]
}